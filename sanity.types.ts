/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Office = {
  _id: string;
  _type: "office";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  officeName: string;
  location: string;
  locationUrl?: string;
  phone?: string;
  email?: string;
  officeCode: string;
  employees: number;
  charitable: number;
  orders?: number;
  target?: string;
  status: "gifted" | "processing" | "donated" | "target_filled";
  shipDate: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  description?: string;
  supportStaff?: Array<{
    name: string;
    _key: string;
  }>;
  isActive?: boolean;
};

export type Address = {
  _id: string;
  _type: "address";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  email?: string;
  address: string;
  city: string;
  state: string;
  zip: string;
  default?: boolean;
  createdAt?: string;
};

export type Order = {
  _id: string;
  _type: "order";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderNumber: string;
  clerkUserId?: string;
  customerName: string;
  phoneNumber: string;
  alternativePhone?: string;
  email: string;
  officeCode?: string;
  district: "dhaka_city" | "chittagong" | "sylhet" | "rajshahi" | "khulna" | "barisal" | "rangpur" | "mymensingh";
  thana: "dhanmondi" | "gulshan" | "banani" | "uttara" | "mirpur" | "tejgaon" | "wari" | "old_dhaka";
  shippingMethod: "inside_dhaka" | "inside_chittagong" | "outside_cities";
  shippingCost: number;
  paymentMethod: "cod" | "mobile_banking" | "bank_transfer";
  products?: Array<{
    product?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "product";
    };
    quantity?: number;
    priceAtTime: number;
    _key: string;
  }>;
  subtotal: number;
  discountAmount?: number;
  discountCode?: string;
  totalPrice: number;
  currency: string;
  address?: {
    fullAddress: string;
    district: string;
    thana: string;
    name: string;
  };
  status?: "pending" | "processing" | "out_for_delivery" | "delivered" | "cancelled";
  orderDate: string;
  notes?: string;
};

export type Product = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      target?: "_self" | "_blank";
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  regularPrice: number;
  salePrice: number;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  status?: "sale";
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
  description?: string;
  range?: number;
  featured?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = Office | Address | Order | Product | Category | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/office-queries.ts
// Variable: officesQuery
// Query: *[_type == "office"] | order(shipDate desc) {    _id,    officeName,    location,    locationUrl,    officeCode,    employees,    charitable,    orders,    target,    status,    shipDate,    isActive,    image  }
export type OfficesQueryResult = Array<{
  _id: string;
  officeName: string;
  location: string;
  locationUrl: string | null;
  officeCode: string;
  employees: number;
  charitable: number;
  orders: number | null;
  target: string | null;
  status: "donated" | "gifted" | "processing" | "target_filled";
  shipDate: string;
  isActive: boolean | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: searchOfficesQuery
// Query: *[_type == "office" && officeCode match $searchTerm + "*"] | order(shipDate desc) {    _id,    officeName,    location,    locationUrl,    officeCode,    employees,    charitable,    orders,    target,    status,    shipDate,    isActive,    image  }
export type SearchOfficesQueryResult = Array<{
  _id: string;
  officeName: string;
  location: string;
  locationUrl: string | null;
  officeCode: string;
  employees: number;
  charitable: number;
  orders: number | null;
  target: string | null;
  status: "donated" | "gifted" | "processing" | "target_filled";
  shipDate: string;
  isActive: boolean | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
}>;
// Variable: officeCodesQuery
// Query: *[_type == "office"]{officeCode}
export type OfficeCodesQueryResult = Array<{
  officeCode: string;
}>;
// Variable: query
// Query: *[_type == "office" && _id == $officeId][0]{    _id,    officeName,    location,    locationUrl,    phone,    email,    officeCode,    employees,    charitable,    orders,    target,    status,    shipDate,    isActive,    image,    description,    supportStaff  }
export type QueryResult = {
  _id: string;
  officeName: string;
  location: string;
  locationUrl: string | null;
  phone: string | null;
  email: string | null;
  officeCode: string;
  employees: number;
  charitable: number;
  orders: number | null;
  target: string | null;
  status: "donated" | "gifted" | "processing" | "target_filled";
  shipDate: string;
  isActive: boolean | null;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  } | null;
  description: string | null;
  supportStaff: Array<{
    name: string;
    _key: string;
  }> | null;
} | null;

// Source: ./sanity/queries/query.ts
// Variable: DEAL_PRODUCTS
// Query: *[_type == 'product' && status == 'hot'] | order(name asc){    ...,"categories": categories[]->title  }
export type DEAL_PRODUCTSResult = Array<never>;
// Variable: PRODUCT_BY_SLUG_QUERY
// Query: *[_type == "product" && slug.current == $slug] | order(name asc) [0]
export type PRODUCT_BY_SLUG_QUERYResult = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      target?: "_blank" | "_self";
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  regularPrice: number;
  salePrice: number;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  status?: "sale";
} | null;
// Variable: MY_ORDERS_QUERY
// Query: *[_type == 'order' && clerkUserId == $userId] | order(orderData desc){...,products[]{  ...,product->}}
export type MY_ORDERS_QUERYResult = Array<{
  _id: string;
  _type: "order";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderNumber: string;
  clerkUserId?: string;
  customerName: string;
  phoneNumber: string;
  alternativePhone?: string;
  email: string;
  officeCode?: string;
  district: "barisal" | "chittagong" | "dhaka_city" | "khulna" | "mymensingh" | "rajshahi" | "rangpur" | "sylhet";
  thana: "banani" | "dhanmondi" | "gulshan" | "mirpur" | "old_dhaka" | "tejgaon" | "uttara" | "wari";
  shippingMethod: "inside_chittagong" | "inside_dhaka" | "outside_cities";
  shippingCost: number;
  paymentMethod: "bank_transfer" | "cod" | "mobile_banking";
  products: Array<{
    product: {
      _id: string;
      _type: "product";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name: string;
      slug: Slug;
      images?: Array<{
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }>;
      description?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          target?: "_blank" | "_self";
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      regularPrice: number;
      salePrice: number;
      categories?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "category";
      }>;
      status?: "sale";
    } | null;
    quantity?: number;
    priceAtTime: number;
    _key: string;
  }> | null;
  subtotal: number;
  discountAmount?: number;
  discountCode?: string;
  totalPrice: number;
  currency: string;
  address?: {
    fullAddress: string;
    district: string;
    thana: string;
    name: string;
  };
  status?: "cancelled" | "delivered" | "out_for_delivery" | "pending" | "processing";
  orderDate: string;
  notes?: string;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n  *[_type == \"office\"] | order(shipDate desc) {\n    _id,\n    officeName,\n    location,\n    locationUrl,\n    officeCode,\n    employees,\n    charitable,\n    orders,\n    target,\n    status,\n    shipDate,\n    isActive,\n    image\n  }\n": OfficesQueryResult;
    "\n  *[_type == \"office\" && officeCode match $searchTerm + \"*\"] | order(shipDate desc) {\n    _id,\n    officeName,\n    location,\n    locationUrl,\n    officeCode,\n    employees,\n    charitable,\n    orders,\n    target,\n    status,\n    shipDate,\n    isActive,\n    image\n  }\n": SearchOfficesQueryResult;
    "*[_type == \"office\"]{officeCode}": OfficeCodesQueryResult;
    "*[_type == \"office\" && _id == $officeId][0]{\n    _id,\n    officeName,\n    location,\n    locationUrl,\n    phone,\n    email,\n    officeCode,\n    employees,\n    charitable,\n    orders,\n    target,\n    status,\n    shipDate,\n    isActive,\n    image,\n    description,\n    supportStaff\n  }": QueryResult;
    "*[_type == 'product' && status == 'hot'] | order(name asc){\n    ...,\"categories\": categories[]->title\n  }": DEAL_PRODUCTSResult;
    "*[_type == \"product\" && slug.current == $slug] | order(name asc) [0]": PRODUCT_BY_SLUG_QUERYResult;
    "*[_type == 'order' && clerkUserId == $userId] | order(orderData desc){\n...,products[]{\n  ...,product->\n}\n}": MY_ORDERS_QUERYResult;
  }
}
